
Hello world.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000009d8  00000a6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000181  0080012a  0080012a  00000a96  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a96  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ac8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000127a  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000095b  00000000  00000000  00001ee2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b39  00000000  00000000  0000283d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000424  00000000  00000000  00003378  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008a6  00000000  00000000  0000379c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cc1  00000000  00000000  00004042  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00004d03  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 95 02 	jmp	0x52a	; 0x52a <__vector_20>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ed       	ldi	r30, 0xD8	; 216
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 32       	cpi	r26, 0x2A	; 42
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	aa e2       	ldi	r26, 0x2A	; 42
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 3a       	cpi	r26, 0xAB	; 171
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 70 03 	call	0x6e0	; 0x6e0 <main>
  9e:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uartInit>:
	pid_out = ctx->P_factor + ctx->I_factor + ctx->D_factor; // clip -100....100 or 0...100
	
	ctx->prev_err = ctx->err;
	
	return pid_out;
  a6:	88 ed       	ldi	r24, 0xD8	; 216
  a8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  ac:	8e e0       	ldi	r24, 0x0E	; 14
  ae:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  b2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  b6:	83 e3       	ldi	r24, 0x33	; 51
  b8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  bc:	08 95       	ret

000000be <uartReadByte>:
  be:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
  c2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  c6:	9c 71       	andi	r25, 0x1C	; 28
  c8:	09 f0       	breq	.+2      	; 0xcc <uartReadByte+0xe>
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	08 95       	ret

000000ce <timer0Init>:
  ce:	14 bc       	out	0x24, r1	; 36
  d0:	15 bc       	out	0x25, r1	; 37
  d2:	8e e7       	ldi	r24, 0x7E	; 126
  d4:	87 bd       	out	0x27, r24	; 39
  d6:	86 e3       	ldi	r24, 0x36	; 54
  d8:	88 bd       	out	0x28, r24	; 40
  da:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
  de:	08 95       	ret

000000e0 <timer0Start>:
  e0:	85 b5       	in	r24, 0x25	; 37
  e2:	84 60       	ori	r24, 0x04	; 4
  e4:	85 bd       	out	0x25, r24	; 37
  e6:	08 95       	ret

000000e8 <timer0OCRAInrerruptEn>:
  e8:	ee e6       	ldi	r30, 0x6E	; 110
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	82 60       	ori	r24, 0x02	; 2
  f0:	80 83       	st	Z, r24
  f2:	08 95       	ret

000000f4 <mbClearRecieveBuffer>:
  f4:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <rx_buf_index>
  f8:	ee e2       	ldi	r30, 0x2E	; 46
  fa:	f1 e0       	ldi	r31, 0x01	; 1
  fc:	82 e9       	ldi	r24, 0x92	; 146
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	11 92       	st	Z+, r1
 102:	e8 17       	cp	r30, r24
 104:	f9 07       	cpc	r31, r25
 106:	e1 f7       	brne	.-8      	; 0x100 <mbClearRecieveBuffer+0xc>
 108:	08 95       	ret

0000010a <mbClearTransmitBuffer>:
 10a:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <tx_buf_index>
 10e:	e2 e9       	ldi	r30, 0x92	; 146
 110:	f1 e0       	ldi	r31, 0x01	; 1
 112:	86 ef       	ldi	r24, 0xF6	; 246
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	11 92       	st	Z+, r1
 118:	e8 17       	cp	r30, r24
 11a:	f9 07       	cpc	r31, r25
 11c:	e1 f7       	brne	.-8      	; 0x116 <mbClearTransmitBuffer+0xc>
 11e:	08 95       	ret

00000120 <mbInit>:
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <MB_STATE>
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <uartInit>
 12a:	0e 94 7a 00 	call	0xf4	; 0xf4 <mbClearRecieveBuffer>
 12e:	0e 94 85 00 	call	0x10a	; 0x10a <mbClearTransmitBuffer>
 132:	0e 94 67 00 	call	0xce	; 0xce <timer0Init>
 136:	0e 94 70 00 	call	0xe0	; 0xe0 <timer0Start>
 13a:	0e 94 74 00 	call	0xe8	; 0xe8 <timer0OCRAInrerruptEn>
 13e:	08 95       	ret

00000140 <mbCRCCalc>:
 140:	66 23       	and	r22, r22
 142:	f9 f0       	breq	.+62     	; 0x182 <mbCRCCalc+0x42>
 144:	fc 01       	movw	r30, r24
 146:	61 50       	subi	r22, 0x01	; 1
 148:	26 2f       	mov	r18, r22
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	2f 5f       	subi	r18, 0xFF	; 255
 14e:	3f 4f       	sbci	r19, 0xFF	; 255
 150:	ac 01       	movw	r20, r24
 152:	42 0f       	add	r20, r18
 154:	53 1f       	adc	r21, r19
 156:	8f ef       	ldi	r24, 0xFF	; 255
 158:	9f ef       	ldi	r25, 0xFF	; 255
 15a:	21 91       	ld	r18, Z+
 15c:	82 27       	eor	r24, r18
 15e:	28 e0       	ldi	r18, 0x08	; 8
 160:	80 ff       	sbrs	r24, 0
 162:	07 c0       	rjmp	.+14     	; 0x172 <mbCRCCalc+0x32>
 164:	96 95       	lsr	r25
 166:	87 95       	ror	r24
 168:	31 e0       	ldi	r19, 0x01	; 1
 16a:	83 27       	eor	r24, r19
 16c:	30 ea       	ldi	r19, 0xA0	; 160
 16e:	93 27       	eor	r25, r19
 170:	02 c0       	rjmp	.+4      	; 0x176 <mbCRCCalc+0x36>
 172:	96 95       	lsr	r25
 174:	87 95       	ror	r24
 176:	21 50       	subi	r18, 0x01	; 1
 178:	99 f7       	brne	.-26     	; 0x160 <mbCRCCalc+0x20>
 17a:	e4 17       	cp	r30, r20
 17c:	f5 07       	cpc	r31, r21
 17e:	69 f7       	brne	.-38     	; 0x15a <mbCRCCalc+0x1a>
 180:	02 c0       	rjmp	.+4      	; 0x186 <mbCRCCalc+0x46>
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	9f ef       	ldi	r25, 0xFF	; 255
 186:	98 27       	eor	r25, r24
 188:	89 27       	eor	r24, r25
 18a:	98 27       	eor	r25, r24
 18c:	08 95       	ret

0000018e <mbFrameCheck>:
 18e:	cf 93       	push	r28
 190:	df 93       	push	r29
 192:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <rx_buffer>
 196:	83 30       	cpi	r24, 0x03	; 3
 198:	d9 f4       	brne	.+54     	; 0x1d0 <mbFrameCheck+0x42>
 19a:	60 91 2d 01 	lds	r22, 0x012D	; 0x80012d <rx_buf_index>
 19e:	c6 2f       	mov	r28, r22
 1a0:	d0 e0       	ldi	r29, 0x00	; 0
 1a2:	62 50       	subi	r22, 0x02	; 2
 1a4:	8e e2       	ldi	r24, 0x2E	; 46
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	0e 94 a0 00 	call	0x140	; 0x140 <mbCRCCalc>
 1ac:	ae 01       	movw	r20, r28
 1ae:	42 5d       	subi	r20, 0xD2	; 210
 1b0:	5e 4f       	sbci	r21, 0xFE	; 254
 1b2:	fa 01       	movw	r30, r20
 1b4:	32 97       	sbiw	r30, 0x02	; 2
 1b6:	20 81       	ld	r18, Z
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	32 2f       	mov	r19, r18
 1bc:	22 27       	eor	r18, r18
 1be:	31 96       	adiw	r30, 0x01	; 1
 1c0:	40 81       	ld	r20, Z
 1c2:	24 2b       	or	r18, r20
 1c4:	41 e0       	ldi	r20, 0x01	; 1
 1c6:	28 17       	cp	r18, r24
 1c8:	39 07       	cpc	r19, r25
 1ca:	19 f0       	breq	.+6      	; 0x1d2 <mbFrameCheck+0x44>
 1cc:	40 e0       	ldi	r20, 0x00	; 0
 1ce:	01 c0       	rjmp	.+2      	; 0x1d2 <mbFrameCheck+0x44>
 1d0:	4f ef       	ldi	r20, 0xFF	; 255
 1d2:	84 2f       	mov	r24, r20
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <mbFun03Execution>:
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	a2 e9       	ldi	r26, 0x92	; 146
 1e0:	b1 e0       	ldi	r27, 0x01	; 1
 1e2:	83 e0       	ldi	r24, 0x03	; 3
 1e4:	8c 93       	st	X, r24
 1e6:	ee e2       	ldi	r30, 0x2E	; 46
 1e8:	f1 e0       	ldi	r31, 0x01	; 1
 1ea:	81 81       	ldd	r24, Z+1	; 0x01
 1ec:	11 96       	adiw	r26, 0x01	; 1
 1ee:	8c 93       	st	X, r24
 1f0:	a2 81       	ldd	r26, Z+2	; 0x02
 1f2:	b0 e0       	ldi	r27, 0x00	; 0
 1f4:	ba 2f       	mov	r27, r26
 1f6:	aa 27       	eor	r26, r26
 1f8:	83 81       	ldd	r24, Z+3	; 0x03
 1fa:	a8 2b       	or	r26, r24
 1fc:	ad 32       	cpi	r26, 0x2D	; 45
 1fe:	b1 05       	cpc	r27, r1
 200:	60 f4       	brcc	.+24     	; 0x21a <mbFun03Execution+0x40>
 202:	44 81       	ldd	r20, Z+4	; 0x04
 204:	50 e0       	ldi	r21, 0x00	; 0
 206:	54 2f       	mov	r21, r20
 208:	44 27       	eor	r20, r20
 20a:	85 81       	ldd	r24, Z+5	; 0x05
 20c:	48 2b       	or	r20, r24
 20e:	9a 01       	movw	r18, r20
 210:	cd 01       	movw	r24, r26
 212:	84 0f       	add	r24, r20
 214:	95 1f       	adc	r25, r21
 216:	8e 97       	sbiw	r24, 0x2e	; 46
 218:	80 f0       	brcs	.+32     	; 0x23a <mbFun03Execution+0x60>
 21a:	c2 e9       	ldi	r28, 0x92	; 146
 21c:	d1 e0       	ldi	r29, 0x01	; 1
 21e:	83 e8       	ldi	r24, 0x83	; 131
 220:	8a 83       	std	Y+2, r24	; 0x02
 222:	82 e0       	ldi	r24, 0x02	; 2
 224:	8b 83       	std	Y+3, r24	; 0x03
 226:	64 e0       	ldi	r22, 0x04	; 4
 228:	ce 01       	movw	r24, r28
 22a:	0e 94 a0 00 	call	0x140	; 0x140 <mbCRCCalc>
 22e:	9c 83       	std	Y+4, r25	; 0x04
 230:	8d 83       	std	Y+5, r24	; 0x05
 232:	86 e0       	ldi	r24, 0x06	; 6
 234:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <tx_buf_bytes_number>
 238:	31 c0       	rjmp	.+98     	; 0x29c <mbFun03Execution+0xc2>
 23a:	84 2f       	mov	r24, r20
 23c:	88 0f       	add	r24, r24
 23e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <tx_buffer+0x2>
 242:	23 2b       	or	r18, r19
 244:	c9 f0       	breq	.+50     	; 0x278 <mbFun03Execution+0x9e>
 246:	aa 0f       	add	r26, r26
 248:	bb 1f       	adc	r27, r27
 24a:	aa 50       	subi	r26, 0x0A	; 10
 24c:	be 4f       	sbci	r27, 0xFE	; 254
 24e:	e5 e9       	ldi	r30, 0x95	; 149
 250:	f1 e0       	ldi	r31, 0x01	; 1
 252:	9a 01       	movw	r18, r20
 254:	22 0f       	add	r18, r18
 256:	33 1f       	adc	r19, r19
 258:	2b 56       	subi	r18, 0x6B	; 107
 25a:	3e 4f       	sbci	r19, 0xFE	; 254
 25c:	8c 91       	ld	r24, X
 25e:	11 96       	adiw	r26, 0x01	; 1
 260:	9c 91       	ld	r25, X
 262:	11 97       	sbiw	r26, 0x01	; 1
 264:	12 96       	adiw	r26, 0x02	; 2
 266:	90 83       	st	Z, r25
 268:	81 83       	std	Z+1, r24	; 0x01
 26a:	32 96       	adiw	r30, 0x02	; 2
 26c:	e2 17       	cp	r30, r18
 26e:	f3 07       	cpc	r31, r19
 270:	a9 f7       	brne	.-22     	; 0x25c <mbFun03Execution+0x82>
 272:	c4 2f       	mov	r28, r20
 274:	cc 0f       	add	r28, r28
 276:	01 c0       	rjmp	.+2      	; 0x27a <mbFun03Execution+0xa0>
 278:	c0 e0       	ldi	r28, 0x00	; 0
 27a:	60 91 94 01 	lds	r22, 0x0194	; 0x800194 <tx_buffer+0x2>
 27e:	6d 5f       	subi	r22, 0xFD	; 253
 280:	82 e9       	ldi	r24, 0x92	; 146
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	0e 94 a0 00 	call	0x140	; 0x140 <mbCRCCalc>
 288:	ec 2f       	mov	r30, r28
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	ee 56       	subi	r30, 0x6E	; 110
 28e:	fe 4f       	sbci	r31, 0xFE	; 254
 290:	93 83       	std	Z+3, r25	; 0x03
 292:	84 83       	std	Z+4, r24	; 0x04
 294:	45 e0       	ldi	r20, 0x05	; 5
 296:	4c 0f       	add	r20, r28
 298:	40 93 2b 01 	sts	0x012B, r20	; 0x80012b <tx_buf_bytes_number>
 29c:	df 91       	pop	r29
 29e:	cf 91       	pop	r28
 2a0:	08 95       	ret

000002a2 <mbFun06Execution>:
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	ee e2       	ldi	r30, 0x2E	; 46
 2a8:	f1 e0       	ldi	r31, 0x01	; 1
 2aa:	82 81       	ldd	r24, Z+2	; 0x02
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	98 2f       	mov	r25, r24
 2b0:	88 27       	eor	r24, r24
 2b2:	23 81       	ldd	r18, Z+3	; 0x03
 2b4:	82 2b       	or	r24, r18
 2b6:	85 30       	cpi	r24, 0x05	; 5
 2b8:	91 05       	cpc	r25, r1
 2ba:	a8 f0       	brcs	.+42     	; 0x2e6 <mbFun06Execution+0x44>
 2bc:	c2 e9       	ldi	r28, 0x92	; 146
 2be:	d1 e0       	ldi	r29, 0x01	; 1
 2c0:	83 e0       	ldi	r24, 0x03	; 3
 2c2:	88 83       	st	Y, r24
 2c4:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <rx_buffer+0x1>
 2c8:	89 83       	std	Y+1, r24	; 0x01
 2ca:	86 e8       	ldi	r24, 0x86	; 134
 2cc:	8a 83       	std	Y+2, r24	; 0x02
 2ce:	82 e0       	ldi	r24, 0x02	; 2
 2d0:	8b 83       	std	Y+3, r24	; 0x03
 2d2:	64 e0       	ldi	r22, 0x04	; 4
 2d4:	ce 01       	movw	r24, r28
 2d6:	0e 94 a0 00 	call	0x140	; 0x140 <mbCRCCalc>
 2da:	9c 83       	std	Y+4, r25	; 0x04
 2dc:	8d 83       	std	Y+5, r24	; 0x05
 2de:	86 e0       	ldi	r24, 0x06	; 6
 2e0:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <tx_buf_bytes_number>
 2e4:	29 c0       	rjmp	.+82     	; 0x338 <mbFun06Execution+0x96>
 2e6:	88 0f       	add	r24, r24
 2e8:	99 1f       	adc	r25, r25
 2ea:	fc 01       	movw	r30, r24
 2ec:	ea 50       	subi	r30, 0x0A	; 10
 2ee:	fe 4f       	sbci	r31, 0xFE	; 254
 2f0:	ae e2       	ldi	r26, 0x2E	; 46
 2f2:	b1 e0       	ldi	r27, 0x01	; 1
 2f4:	14 96       	adiw	r26, 0x04	; 4
 2f6:	8c 91       	ld	r24, X
 2f8:	14 97       	sbiw	r26, 0x04	; 4
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	98 2f       	mov	r25, r24
 2fe:	88 27       	eor	r24, r24
 300:	15 96       	adiw	r26, 0x05	; 5
 302:	2c 91       	ld	r18, X
 304:	15 97       	sbiw	r26, 0x05	; 5
 306:	82 2b       	or	r24, r18
 308:	91 83       	std	Z+1, r25	; 0x01
 30a:	80 83       	st	Z, r24
 30c:	fd 01       	movw	r30, r26
 30e:	a2 e9       	ldi	r26, 0x92	; 146
 310:	b1 e0       	ldi	r27, 0x01	; 1
 312:	24 e3       	ldi	r18, 0x34	; 52
 314:	31 e0       	ldi	r19, 0x01	; 1
 316:	81 91       	ld	r24, Z+
 318:	8d 93       	st	X+, r24
 31a:	e2 17       	cp	r30, r18
 31c:	f3 07       	cpc	r31, r19
 31e:	d9 f7       	brne	.-10     	; 0x316 <mbFun06Execution+0x74>
 320:	66 e0       	ldi	r22, 0x06	; 6
 322:	82 e9       	ldi	r24, 0x92	; 146
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	0e 94 a0 00 	call	0x140	; 0x140 <mbCRCCalc>
 32a:	e2 e9       	ldi	r30, 0x92	; 146
 32c:	f1 e0       	ldi	r31, 0x01	; 1
 32e:	96 83       	std	Z+6, r25	; 0x06
 330:	87 83       	std	Z+7, r24	; 0x07
 332:	88 e0       	ldi	r24, 0x08	; 8
 334:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <tx_buf_bytes_number>
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	08 95       	ret

0000033e <mbFun10Execution>:
 33e:	8f 92       	push	r8
 340:	9f 92       	push	r9
 342:	af 92       	push	r10
 344:	bf 92       	push	r11
 346:	df 92       	push	r13
 348:	ef 92       	push	r14
 34a:	ff 92       	push	r15
 34c:	0f 93       	push	r16
 34e:	1f 93       	push	r17
 350:	cf 93       	push	r28
 352:	df 93       	push	r29
 354:	ee e2       	ldi	r30, 0x2E	; 46
 356:	f1 e0       	ldi	r31, 0x01	; 1
 358:	22 81       	ldd	r18, Z+2	; 0x02
 35a:	30 e0       	ldi	r19, 0x00	; 0
 35c:	32 2f       	mov	r19, r18
 35e:	22 27       	eor	r18, r18
 360:	83 81       	ldd	r24, Z+3	; 0x03
 362:	28 2b       	or	r18, r24
 364:	2d 32       	cpi	r18, 0x2D	; 45
 366:	31 05       	cpc	r19, r1
 368:	88 f4       	brcc	.+34     	; 0x38c <mbFun10Execution+0x4e>
 36a:	84 81       	ldd	r24, Z+4	; 0x04
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	98 2f       	mov	r25, r24
 370:	88 27       	eor	r24, r24
 372:	45 81       	ldd	r20, Z+5	; 0x05
 374:	84 2b       	or	r24, r20
 376:	82 0f       	add	r24, r18
 378:	93 1f       	adc	r25, r19
 37a:	8e 97       	sbiw	r24, 0x2e	; 46
 37c:	38 f4       	brcc	.+14     	; 0x38c <mbFun10Execution+0x4e>
 37e:	60 91 34 01 	lds	r22, 0x0134	; 0x800134 <rx_buffer+0x6>
 382:	70 e0       	ldi	r23, 0x00	; 0
 384:	61 15       	cp	r22, r1
 386:	71 05       	cpc	r23, r1
 388:	b1 f4       	brne	.+44     	; 0x3b6 <mbFun10Execution+0x78>
 38a:	6e c0       	rjmp	.+220    	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 38c:	c2 e9       	ldi	r28, 0x92	; 146
 38e:	d1 e0       	ldi	r29, 0x01	; 1
 390:	83 e0       	ldi	r24, 0x03	; 3
 392:	88 83       	st	Y, r24
 394:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <rx_buffer+0x1>
 398:	89 83       	std	Y+1, r24	; 0x01
 39a:	80 e9       	ldi	r24, 0x90	; 144
 39c:	8a 83       	std	Y+2, r24	; 0x02
 39e:	82 e0       	ldi	r24, 0x02	; 2
 3a0:	8b 83       	std	Y+3, r24	; 0x03
 3a2:	64 e0       	ldi	r22, 0x04	; 4
 3a4:	ce 01       	movw	r24, r28
 3a6:	0e 94 a0 00 	call	0x140	; 0x140 <mbCRCCalc>
 3aa:	9c 83       	std	Y+4, r25	; 0x04
 3ac:	8d 83       	std	Y+5, r24	; 0x05
 3ae:	86 e0       	ldi	r24, 0x06	; 6
 3b0:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <tx_buf_bytes_number>
 3b4:	60 c0       	rjmp	.+192    	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 3b6:	a5 e3       	ldi	r26, 0x35	; 53
 3b8:	b1 e0       	ldi	r27, 0x01	; 1
 3ba:	e9 01       	movw	r28, r18
 3bc:	cc 0f       	add	r28, r28
 3be:	dd 1f       	adc	r29, r29
 3c0:	fe 01       	movw	r30, r28
 3c2:	ea 50       	subi	r30, 0x0A	; 10
 3c4:	fe 4f       	sbci	r31, 0xFE	; 254
 3c6:	ce 01       	movw	r24, r28
 3c8:	80 5b       	subi	r24, 0xB0	; 176
 3ca:	9d 4f       	sbci	r25, 0xFD	; 253
 3cc:	5c 01       	movw	r10, r24
 3ce:	40 e0       	ldi	r20, 0x00	; 0
 3d0:	50 e0       	ldi	r21, 0x00	; 0
 3d2:	8c 91       	ld	r24, X
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	98 2f       	mov	r25, r24
 3d8:	88 27       	eor	r24, r24
 3da:	11 96       	adiw	r26, 0x01	; 1
 3dc:	1c 91       	ld	r17, X
 3de:	11 97       	sbiw	r26, 0x01	; 1
 3e0:	81 2b       	or	r24, r17
 3e2:	80 83       	st	Z, r24
 3e4:	91 83       	std	Z+1, r25	; 0x01
 3e6:	32 96       	adiw	r30, 0x02	; 2
 3e8:	25 30       	cpi	r18, 0x05	; 5
 3ea:	31 05       	cpc	r19, r1
 3ec:	e0 f0       	brcs	.+56     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3ee:	89 01       	movw	r16, r18
 3f0:	05 50       	subi	r16, 0x05	; 5
 3f2:	11 09       	sbc	r17, r1
 3f4:	00 ff       	sbrs	r16, 0
 3f6:	1a c0       	rjmp	.+52     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3f8:	48 01       	movw	r8, r16
 3fa:	96 94       	lsr	r9
 3fc:	87 94       	ror	r8
 3fe:	7f 01       	movw	r14, r30
 400:	c4 e0       	ldi	r28, 0x04	; 4
 402:	ec 1a       	sub	r14, r28
 404:	f1 08       	sbc	r15, r1
 406:	e7 01       	movw	r28, r14
 408:	d8 80       	ld	r13, Y
 40a:	f9 80       	ldd	r15, Y+1	; 0x01
 40c:	84 01       	movw	r16, r8
 40e:	00 0f       	add	r16, r16
 410:	11 1f       	adc	r17, r17
 412:	00 0f       	add	r16, r16
 414:	11 1f       	adc	r17, r17
 416:	05 5a       	subi	r16, 0xA5	; 165
 418:	1d 4f       	sbci	r17, 0xFD	; 253
 41a:	e8 01       	movw	r28, r16
 41c:	f8 82       	st	Y, r15
 41e:	d9 82       	std	Y+1, r13	; 0x01
 420:	9a 83       	std	Y+2, r25	; 0x02
 422:	8b 83       	std	Y+3, r24	; 0x03
 424:	03 c0       	rjmp	.+6      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 426:	e5 01       	movw	r28, r10
 428:	88 83       	st	Y, r24
 42a:	99 83       	std	Y+1, r25	; 0x01
 42c:	4e 5f       	subi	r20, 0xFE	; 254
 42e:	5f 4f       	sbci	r21, 0xFF	; 255
 430:	12 96       	adiw	r26, 0x02	; 2
 432:	2f 5f       	subi	r18, 0xFF	; 255
 434:	3f 4f       	sbci	r19, 0xFF	; 255
 436:	d2 e0       	ldi	r29, 0x02	; 2
 438:	ad 0e       	add	r10, r29
 43a:	b1 1c       	adc	r11, r1
 43c:	46 17       	cp	r20, r22
 43e:	57 07       	cpc	r21, r23
 440:	40 f2       	brcs	.-112    	; 0x3d2 <mbFun10Execution+0x94>
 442:	12 c0       	rjmp	.+36     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 444:	81 91       	ld	r24, Z+
 446:	8d 93       	st	X+, r24
 448:	e2 17       	cp	r30, r18
 44a:	f3 07       	cpc	r31, r19
 44c:	d9 f7       	brne	.-10     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 44e:	66 e0       	ldi	r22, 0x06	; 6
 450:	82 e9       	ldi	r24, 0x92	; 146
 452:	91 e0       	ldi	r25, 0x01	; 1
 454:	0e 94 a0 00 	call	0x140	; 0x140 <mbCRCCalc>
 458:	e2 e9       	ldi	r30, 0x92	; 146
 45a:	f1 e0       	ldi	r31, 0x01	; 1
 45c:	96 83       	std	Z+6, r25	; 0x06
 45e:	87 83       	std	Z+7, r24	; 0x07
 460:	88 e0       	ldi	r24, 0x08	; 8
 462:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <tx_buf_bytes_number>
 466:	07 c0       	rjmp	.+14     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 468:	ee e2       	ldi	r30, 0x2E	; 46
 46a:	f1 e0       	ldi	r31, 0x01	; 1
 46c:	a2 e9       	ldi	r26, 0x92	; 146
 46e:	b1 e0       	ldi	r27, 0x01	; 1
 470:	24 e3       	ldi	r18, 0x34	; 52
 472:	31 e0       	ldi	r19, 0x01	; 1
 474:	e7 cf       	rjmp	.-50     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	1f 91       	pop	r17
 47c:	0f 91       	pop	r16
 47e:	ff 90       	pop	r15
 480:	ef 90       	pop	r14
 482:	df 90       	pop	r13
 484:	bf 90       	pop	r11
 486:	af 90       	pop	r10
 488:	9f 90       	pop	r9
 48a:	8f 90       	pop	r8
 48c:	08 95       	ret

0000048e <mbReplyProcessing>:
 48e:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <rx_buffer+0x1>
 492:	83 30       	cpi	r24, 0x03	; 3
 494:	11 f4       	brne	.+4      	; 0x49a <mbReplyProcessing+0xc>
 496:	0e 94 ed 00 	call	0x1da	; 0x1da <mbFun03Execution>
 49a:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <rx_buffer+0x1>
 49e:	86 30       	cpi	r24, 0x06	; 6
 4a0:	11 f4       	brne	.+4      	; 0x4a6 <mbReplyProcessing+0x18>
 4a2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <mbFun06Execution>
 4a6:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <rx_buffer+0x1>
 4aa:	80 31       	cpi	r24, 0x10	; 16
 4ac:	11 f4       	brne	.+4      	; 0x4b2 <mbReplyProcessing+0x24>
 4ae:	0e 94 9f 01 	call	0x33e	; 0x33e <mbFun10Execution>
 4b2:	08 95       	ret

000004b4 <__vector_18>:
 4b4:	1f 92       	push	r1
 4b6:	0f 92       	push	r0
 4b8:	0f b6       	in	r0, 0x3f	; 63
 4ba:	0f 92       	push	r0
 4bc:	11 24       	eor	r1, r1
 4be:	2f 93       	push	r18
 4c0:	3f 93       	push	r19
 4c2:	4f 93       	push	r20
 4c4:	5f 93       	push	r21
 4c6:	6f 93       	push	r22
 4c8:	7f 93       	push	r23
 4ca:	8f 93       	push	r24
 4cc:	9f 93       	push	r25
 4ce:	af 93       	push	r26
 4d0:	bf 93       	push	r27
 4d2:	ef 93       	push	r30
 4d4:	ff 93       	push	r31
 4d6:	0e 94 5f 00 	call	0xbe	; 0xbe <uartReadByte>
 4da:	90 91 5a 02 	lds	r25, 0x025A	; 0x80025a <MB_STATE>
 4de:	91 30       	cpi	r25, 0x01	; 1
 4e0:	21 f4       	brne	.+8      	; 0x4ea <__vector_18+0x36>
 4e2:	92 e0       	ldi	r25, 0x02	; 2
 4e4:	90 93 5a 02 	sts	0x025A, r25	; 0x80025a <MB_STATE>
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <__vector_18+0x3a>
 4ea:	92 30       	cpi	r25, 0x02	; 2
 4ec:	61 f4       	brne	.+24     	; 0x506 <__vector_18+0x52>
 4ee:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <rx_buf_index>
 4f2:	94 36       	cpi	r25, 0x64	; 100
 4f4:	40 f4       	brcc	.+16     	; 0x506 <__vector_18+0x52>
 4f6:	e9 2f       	mov	r30, r25
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	e2 5d       	subi	r30, 0xD2	; 210
 4fc:	fe 4f       	sbci	r31, 0xFE	; 254
 4fe:	80 83       	st	Z, r24
 500:	9f 5f       	subi	r25, 0xFF	; 255
 502:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <rx_buf_index>
 506:	16 bc       	out	0x26, r1	; 38
 508:	ff 91       	pop	r31
 50a:	ef 91       	pop	r30
 50c:	bf 91       	pop	r27
 50e:	af 91       	pop	r26
 510:	9f 91       	pop	r25
 512:	8f 91       	pop	r24
 514:	7f 91       	pop	r23
 516:	6f 91       	pop	r22
 518:	5f 91       	pop	r21
 51a:	4f 91       	pop	r20
 51c:	3f 91       	pop	r19
 51e:	2f 91       	pop	r18
 520:	0f 90       	pop	r0
 522:	0f be       	out	0x3f, r0	; 63
 524:	0f 90       	pop	r0
 526:	1f 90       	pop	r1
 528:	18 95       	reti

0000052a <__vector_20>:
 52a:	1f 92       	push	r1
 52c:	0f 92       	push	r0
 52e:	0f b6       	in	r0, 0x3f	; 63
 530:	0f 92       	push	r0
 532:	11 24       	eor	r1, r1
 534:	2f 93       	push	r18
 536:	3f 93       	push	r19
 538:	4f 93       	push	r20
 53a:	5f 93       	push	r21
 53c:	6f 93       	push	r22
 53e:	7f 93       	push	r23
 540:	8f 93       	push	r24
 542:	9f 93       	push	r25
 544:	af 93       	push	r26
 546:	bf 93       	push	r27
 548:	ef 93       	push	r30
 54a:	ff 93       	push	r31
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <MB_STATE>
 552:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <tx_buf_index>
 556:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <tx_buf_bytes_number>
 55a:	e8 17       	cp	r30, r24
 55c:	60 f4       	brcc	.+24     	; 0x576 <__vector_20+0x4c>
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	ee 56       	subi	r30, 0x6E	; 110
 562:	fe 4f       	sbci	r31, 0xFE	; 254
 564:	80 81       	ld	r24, Z
 566:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 56a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <tx_buf_index>
 56e:	8f 5f       	subi	r24, 0xFF	; 255
 570:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <tx_buf_index>
 574:	19 c0       	rjmp	.+50     	; 0x5a8 <__vector_20+0x7e>
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <transmittion_finish>
 57c:	0e 94 85 00 	call	0x10a	; 0x10a <mbClearTransmitBuffer>
 580:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
 584:	88 23       	and	r24, r24
 586:	81 f0       	breq	.+32     	; 0x5a8 <__vector_20+0x7e>
 588:	0e 94 47 02 	call	0x48e	; 0x48e <mbReplyProcessing>
 58c:	83 e0       	ldi	r24, 0x03	; 3
 58e:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <MB_STATE>
 592:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <transmittion_finish>
 596:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <tx_buffer>
 59a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 59e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <tx_buf_index>
 5a2:	8f 5f       	subi	r24, 0xFF	; 255
 5a4:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <tx_buf_index>
 5a8:	ff 91       	pop	r31
 5aa:	ef 91       	pop	r30
 5ac:	bf 91       	pop	r27
 5ae:	af 91       	pop	r26
 5b0:	9f 91       	pop	r25
 5b2:	8f 91       	pop	r24
 5b4:	7f 91       	pop	r23
 5b6:	6f 91       	pop	r22
 5b8:	5f 91       	pop	r21
 5ba:	4f 91       	pop	r20
 5bc:	3f 91       	pop	r19
 5be:	2f 91       	pop	r18
 5c0:	0f 90       	pop	r0
 5c2:	0f be       	out	0x3f, r0	; 63
 5c4:	0f 90       	pop	r0
 5c6:	1f 90       	pop	r1
 5c8:	18 95       	reti

000005ca <__vector_14>:
 5ca:	1f 92       	push	r1
 5cc:	0f 92       	push	r0
 5ce:	0f b6       	in	r0, 0x3f	; 63
 5d0:	0f 92       	push	r0
 5d2:	11 24       	eor	r1, r1
 5d4:	2f 93       	push	r18
 5d6:	3f 93       	push	r19
 5d8:	4f 93       	push	r20
 5da:	5f 93       	push	r21
 5dc:	6f 93       	push	r22
 5de:	7f 93       	push	r23
 5e0:	8f 93       	push	r24
 5e2:	9f 93       	push	r25
 5e4:	af 93       	push	r26
 5e6:	bf 93       	push	r27
 5e8:	ef 93       	push	r30
 5ea:	ff 93       	push	r31
 5ec:	16 bc       	out	0x26, r1	; 38
 5ee:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <MB_STATE>
 5f2:	82 30       	cpi	r24, 0x02	; 2
 5f4:	51 f5       	brne	.+84     	; 0x64a <__vector_14+0x80>
 5f6:	84 e0       	ldi	r24, 0x04	; 4
 5f8:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <MB_STATE>
 5fc:	0e 94 c7 00 	call	0x18e	; 0x18e <mbFrameCheck>
 600:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <frame_check_result>
 604:	95 e0       	ldi	r25, 0x05	; 5
 606:	90 93 5a 02 	sts	0x025A, r25	; 0x80025a <MB_STATE>
 60a:	81 30       	cpi	r24, 0x01	; 1
 60c:	c9 f4       	brne	.+50     	; 0x640 <__vector_14+0x76>
 60e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <transmittion_finish>
 612:	81 11       	cpse	r24, r1
 614:	04 c0       	rjmp	.+8      	; 0x61e <__vector_14+0x54>
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
 61c:	16 c0       	rjmp	.+44     	; 0x64a <__vector_14+0x80>
 61e:	0e 94 47 02 	call	0x48e	; 0x48e <mbReplyProcessing>
 622:	83 e0       	ldi	r24, 0x03	; 3
 624:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <MB_STATE>
 628:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <transmittion_finish>
 62c:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <tx_buffer>
 630:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 634:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <tx_buf_index>
 638:	8f 5f       	subi	r24, 0xFF	; 255
 63a:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <tx_buf_index>
 63e:	03 c0       	rjmp	.+6      	; 0x646 <__vector_14+0x7c>
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <MB_STATE>
 646:	0e 94 7a 00 	call	0xf4	; 0xf4 <mbClearRecieveBuffer>
 64a:	ff 91       	pop	r31
 64c:	ef 91       	pop	r30
 64e:	bf 91       	pop	r27
 650:	af 91       	pop	r26
 652:	9f 91       	pop	r25
 654:	8f 91       	pop	r24
 656:	7f 91       	pop	r23
 658:	6f 91       	pop	r22
 65a:	5f 91       	pop	r21
 65c:	4f 91       	pop	r20
 65e:	3f 91       	pop	r19
 660:	2f 91       	pop	r18
 662:	0f 90       	pop	r0
 664:	0f be       	out	0x3f, r0	; 63
 666:	0f 90       	pop	r0
 668:	1f 90       	pop	r1
 66a:	18 95       	reti

0000066c <pwmInit>:
 66c:	82 e0       	ldi	r24, 0x02	; 2
 66e:	84 b9       	out	0x04, r24	; 4
 670:	e0 e8       	ldi	r30, 0x80	; 128
 672:	f0 e0       	ldi	r31, 0x00	; 0
 674:	80 81       	ld	r24, Z
 676:	82 68       	ori	r24, 0x82	; 130
 678:	80 83       	st	Z, r24
 67a:	e1 e8       	ldi	r30, 0x81	; 129
 67c:	f0 e0       	ldi	r31, 0x00	; 0
 67e:	80 81       	ld	r24, Z
 680:	88 61       	ori	r24, 0x18	; 24
 682:	80 83       	st	Z, r24
 684:	8f ef       	ldi	r24, 0xFF	; 255
 686:	9f ef       	ldi	r25, 0xFF	; 255
 688:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 68c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 690:	08 95       	ret

00000692 <pwmStart>:
 692:	e1 e8       	ldi	r30, 0x81	; 129
 694:	f0 e0       	ldi	r31, 0x00	; 0
 696:	80 81       	ld	r24, Z
 698:	81 60       	ori	r24, 0x01	; 1
 69a:	80 83       	st	Z, r24
 69c:	08 95       	ret

0000069e <pwmSetDutyCycle>:
 69e:	20 e0       	ldi	r18, 0x00	; 0
 6a0:	30 e0       	ldi	r19, 0x00	; 0
 6a2:	48 ec       	ldi	r20, 0xC8	; 200
 6a4:	52 e4       	ldi	r21, 0x42	; 66
 6a6:	0e 94 8b 03 	call	0x716	; 0x716 <__divsf3>
 6aa:	20 e0       	ldi	r18, 0x00	; 0
 6ac:	30 e0       	ldi	r19, 0x00	; 0
 6ae:	40 e8       	ldi	r20, 0x80	; 128
 6b0:	57 e4       	ldi	r21, 0x47	; 71
 6b2:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 6b6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__fixunssfsi>
 6ba:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 6be:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 6c2:	08 95       	ret

000006c4 <pidInit>:
 6c4:	fc 01       	movw	r30, r24
 6c6:	14 86       	std	Z+12, r1	; 0x0c
 6c8:	15 86       	std	Z+13, r1	; 0x0d
 6ca:	16 86       	std	Z+14, r1	; 0x0e
 6cc:	17 86       	std	Z+15, r1	; 0x0f
 6ce:	10 8a       	std	Z+16, r1	; 0x10
 6d0:	11 8a       	std	Z+17, r1	; 0x11
 6d2:	12 8a       	std	Z+18, r1	; 0x12
 6d4:	13 8a       	std	Z+19, r1	; 0x13
 6d6:	10 8e       	std	Z+24, r1	; 0x18
 6d8:	11 8e       	std	Z+25, r1	; 0x19
 6da:	12 8e       	std	Z+26, r1	; 0x1a
 6dc:	13 8e       	std	Z+27, r1	; 0x1b
 6de:	08 95       	ret

000006e0 <main>:
int main(void)
{
	
	// Input/Output Ports initialization
	// Port B initialization -> Led
	DDRB |= (1 << DDB5);
 6e0:	25 9a       	sbi	0x04, 5	; 4

	
	mbInit();
 6e2:	0e 94 90 00 	call	0x120	; 0x120 <mbInit>
	
/*	adcInit();
	adcStart(); */
	pwmInit();
 6e6:	0e 94 36 03 	call	0x66c	; 0x66c <pwmInit>
	pwmStart();
 6ea:	0e 94 49 03 	call	0x692	; 0x692 <pwmStart>
	
	pidInit(&pidCtx);
 6ee:	80 e0       	ldi	r24, 0x00	; 0
 6f0:	91 e0       	ldi	r25, 0x01	; 1
 6f2:	0e 94 62 03 	call	0x6c4	; 0x6c4 <pidInit>
	
	
	
	// Globally enable interrupts
	sei();
 6f6:	78 94       	sei
		uint16_reg_array[MB_ADR_PID_CONTROL_P_FACTOR+1] = ( PID_CONTROL_P_FACTOR.u[2] << 8 ) | ( PID_CONTROL_P_FACTOR.u[3] );
		
		uint16_reg_array[MB_ADR_PID_CONTROL_I_FACTOR] = ( PID_CONTROL_I_FACTOR.u[0] << 8 ) | ( PID_CONTROL_I_FACTOR.u[1] );
		uint16_reg_array[MB_ADR_PID_CONTROL_I_FACTOR+1] = ( PID_CONTROL_I_FACTOR.u[2] << 8 ) | ( PID_CONTROL_I_FACTOR.u[3] );
		*/
		pwmSetDutyCycle (PID_CONTROL_OUT.f);
 6f8:	cb e5       	ldi	r28, 0x5B	; 91
 6fa:	d2 e0       	ldi	r29, 0x02	; 2
 6fc:	68 8d       	ldd	r22, Y+24	; 0x18
 6fe:	79 8d       	ldd	r23, Y+25	; 0x19
 700:	8a 8d       	ldd	r24, Y+26	; 0x1a
 702:	9b 8d       	ldd	r25, Y+27	; 0x1b
 704:	0e 94 4f 03 	call	0x69e	; 0x69e <pwmSetDutyCycle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 708:	8f e3       	ldi	r24, 0x3F	; 63
 70a:	9c e9       	ldi	r25, 0x9C	; 156
 70c:	01 97       	sbiw	r24, 0x01	; 1
 70e:	f1 f7       	brne	.-4      	; 0x70c <main+0x2c>
 710:	00 c0       	rjmp	.+0      	; 0x712 <main+0x32>
 712:	00 00       	nop
 714:	f3 cf       	rjmp	.-26     	; 0x6fc <main+0x1c>

00000716 <__divsf3>:
 716:	0e 94 9f 03 	call	0x73e	; 0x73e <__divsf3x>
 71a:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>
 71e:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
 722:	58 f0       	brcs	.+22     	; 0x73a <__divsf3+0x24>
 724:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
 728:	40 f0       	brcs	.+16     	; 0x73a <__divsf3+0x24>
 72a:	29 f4       	brne	.+10     	; 0x736 <__divsf3+0x20>
 72c:	5f 3f       	cpi	r21, 0xFF	; 255
 72e:	29 f0       	breq	.+10     	; 0x73a <__divsf3+0x24>
 730:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>
 734:	51 11       	cpse	r21, r1
 736:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
 73a:	0c 94 32 04 	jmp	0x864	; 0x864 <__fp_nan>

0000073e <__divsf3x>:
 73e:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
 742:	68 f3       	brcs	.-38     	; 0x71e <__divsf3+0x8>

00000744 <__divsf3_pse>:
 744:	99 23       	and	r25, r25
 746:	b1 f3       	breq	.-20     	; 0x734 <__divsf3+0x1e>
 748:	55 23       	and	r21, r21
 74a:	91 f3       	breq	.-28     	; 0x730 <__divsf3+0x1a>
 74c:	95 1b       	sub	r25, r21
 74e:	55 0b       	sbc	r21, r21
 750:	bb 27       	eor	r27, r27
 752:	aa 27       	eor	r26, r26
 754:	62 17       	cp	r22, r18
 756:	73 07       	cpc	r23, r19
 758:	84 07       	cpc	r24, r20
 75a:	38 f0       	brcs	.+14     	; 0x76a <__divsf3_pse+0x26>
 75c:	9f 5f       	subi	r25, 0xFF	; 255
 75e:	5f 4f       	sbci	r21, 0xFF	; 255
 760:	22 0f       	add	r18, r18
 762:	33 1f       	adc	r19, r19
 764:	44 1f       	adc	r20, r20
 766:	aa 1f       	adc	r26, r26
 768:	a9 f3       	breq	.-22     	; 0x754 <__divsf3_pse+0x10>
 76a:	35 d0       	rcall	.+106    	; 0x7d6 <__divsf3_pse+0x92>
 76c:	0e 2e       	mov	r0, r30
 76e:	3a f0       	brmi	.+14     	; 0x77e <__divsf3_pse+0x3a>
 770:	e0 e8       	ldi	r30, 0x80	; 128
 772:	32 d0       	rcall	.+100    	; 0x7d8 <__divsf3_pse+0x94>
 774:	91 50       	subi	r25, 0x01	; 1
 776:	50 40       	sbci	r21, 0x00	; 0
 778:	e6 95       	lsr	r30
 77a:	00 1c       	adc	r0, r0
 77c:	ca f7       	brpl	.-14     	; 0x770 <__divsf3_pse+0x2c>
 77e:	2b d0       	rcall	.+86     	; 0x7d6 <__divsf3_pse+0x92>
 780:	fe 2f       	mov	r31, r30
 782:	29 d0       	rcall	.+82     	; 0x7d6 <__divsf3_pse+0x92>
 784:	66 0f       	add	r22, r22
 786:	77 1f       	adc	r23, r23
 788:	88 1f       	adc	r24, r24
 78a:	bb 1f       	adc	r27, r27
 78c:	26 17       	cp	r18, r22
 78e:	37 07       	cpc	r19, r23
 790:	48 07       	cpc	r20, r24
 792:	ab 07       	cpc	r26, r27
 794:	b0 e8       	ldi	r27, 0x80	; 128
 796:	09 f0       	breq	.+2      	; 0x79a <__divsf3_pse+0x56>
 798:	bb 0b       	sbc	r27, r27
 79a:	80 2d       	mov	r24, r0
 79c:	bf 01       	movw	r22, r30
 79e:	ff 27       	eor	r31, r31
 7a0:	93 58       	subi	r25, 0x83	; 131
 7a2:	5f 4f       	sbci	r21, 0xFF	; 255
 7a4:	3a f0       	brmi	.+14     	; 0x7b4 <__divsf3_pse+0x70>
 7a6:	9e 3f       	cpi	r25, 0xFE	; 254
 7a8:	51 05       	cpc	r21, r1
 7aa:	78 f0       	brcs	.+30     	; 0x7ca <__divsf3_pse+0x86>
 7ac:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>
 7b0:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
 7b4:	5f 3f       	cpi	r21, 0xFF	; 255
 7b6:	e4 f3       	brlt	.-8      	; 0x7b0 <__divsf3_pse+0x6c>
 7b8:	98 3e       	cpi	r25, 0xE8	; 232
 7ba:	d4 f3       	brlt	.-12     	; 0x7b0 <__divsf3_pse+0x6c>
 7bc:	86 95       	lsr	r24
 7be:	77 95       	ror	r23
 7c0:	67 95       	ror	r22
 7c2:	b7 95       	ror	r27
 7c4:	f7 95       	ror	r31
 7c6:	9f 5f       	subi	r25, 0xFF	; 255
 7c8:	c9 f7       	brne	.-14     	; 0x7bc <__divsf3_pse+0x78>
 7ca:	88 0f       	add	r24, r24
 7cc:	91 1d       	adc	r25, r1
 7ce:	96 95       	lsr	r25
 7d0:	87 95       	ror	r24
 7d2:	97 f9       	bld	r25, 7
 7d4:	08 95       	ret
 7d6:	e1 e0       	ldi	r30, 0x01	; 1
 7d8:	66 0f       	add	r22, r22
 7da:	77 1f       	adc	r23, r23
 7dc:	88 1f       	adc	r24, r24
 7de:	bb 1f       	adc	r27, r27
 7e0:	62 17       	cp	r22, r18
 7e2:	73 07       	cpc	r23, r19
 7e4:	84 07       	cpc	r24, r20
 7e6:	ba 07       	cpc	r27, r26
 7e8:	20 f0       	brcs	.+8      	; 0x7f2 <__divsf3_pse+0xae>
 7ea:	62 1b       	sub	r22, r18
 7ec:	73 0b       	sbc	r23, r19
 7ee:	84 0b       	sbc	r24, r20
 7f0:	ba 0b       	sbc	r27, r26
 7f2:	ee 1f       	adc	r30, r30
 7f4:	88 f7       	brcc	.-30     	; 0x7d8 <__divsf3_pse+0x94>
 7f6:	e0 95       	com	r30
 7f8:	08 95       	ret

000007fa <__fixunssfsi>:
 7fa:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fp_splitA>
 7fe:	88 f0       	brcs	.+34     	; 0x822 <__fixunssfsi+0x28>
 800:	9f 57       	subi	r25, 0x7F	; 127
 802:	98 f0       	brcs	.+38     	; 0x82a <__fixunssfsi+0x30>
 804:	b9 2f       	mov	r27, r25
 806:	99 27       	eor	r25, r25
 808:	b7 51       	subi	r27, 0x17	; 23
 80a:	b0 f0       	brcs	.+44     	; 0x838 <__fixunssfsi+0x3e>
 80c:	e1 f0       	breq	.+56     	; 0x846 <__fixunssfsi+0x4c>
 80e:	66 0f       	add	r22, r22
 810:	77 1f       	adc	r23, r23
 812:	88 1f       	adc	r24, r24
 814:	99 1f       	adc	r25, r25
 816:	1a f0       	brmi	.+6      	; 0x81e <__fixunssfsi+0x24>
 818:	ba 95       	dec	r27
 81a:	c9 f7       	brne	.-14     	; 0x80e <__fixunssfsi+0x14>
 81c:	14 c0       	rjmp	.+40     	; 0x846 <__fixunssfsi+0x4c>
 81e:	b1 30       	cpi	r27, 0x01	; 1
 820:	91 f0       	breq	.+36     	; 0x846 <__fixunssfsi+0x4c>
 822:	0e 94 76 04 	call	0x8ec	; 0x8ec <__fp_zero>
 826:	b1 e0       	ldi	r27, 0x01	; 1
 828:	08 95       	ret
 82a:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_zero>
 82e:	67 2f       	mov	r22, r23
 830:	78 2f       	mov	r23, r24
 832:	88 27       	eor	r24, r24
 834:	b8 5f       	subi	r27, 0xF8	; 248
 836:	39 f0       	breq	.+14     	; 0x846 <__fixunssfsi+0x4c>
 838:	b9 3f       	cpi	r27, 0xF9	; 249
 83a:	cc f3       	brlt	.-14     	; 0x82e <__fixunssfsi+0x34>
 83c:	86 95       	lsr	r24
 83e:	77 95       	ror	r23
 840:	67 95       	ror	r22
 842:	b3 95       	inc	r27
 844:	d9 f7       	brne	.-10     	; 0x83c <__fixunssfsi+0x42>
 846:	3e f4       	brtc	.+14     	; 0x856 <__fixunssfsi+0x5c>
 848:	90 95       	com	r25
 84a:	80 95       	com	r24
 84c:	70 95       	com	r23
 84e:	61 95       	neg	r22
 850:	7f 4f       	sbci	r23, 0xFF	; 255
 852:	8f 4f       	sbci	r24, 0xFF	; 255
 854:	9f 4f       	sbci	r25, 0xFF	; 255
 856:	08 95       	ret

00000858 <__fp_inf>:
 858:	97 f9       	bld	r25, 7
 85a:	9f 67       	ori	r25, 0x7F	; 127
 85c:	80 e8       	ldi	r24, 0x80	; 128
 85e:	70 e0       	ldi	r23, 0x00	; 0
 860:	60 e0       	ldi	r22, 0x00	; 0
 862:	08 95       	ret

00000864 <__fp_nan>:
 864:	9f ef       	ldi	r25, 0xFF	; 255
 866:	80 ec       	ldi	r24, 0xC0	; 192
 868:	08 95       	ret

0000086a <__fp_pscA>:
 86a:	00 24       	eor	r0, r0
 86c:	0a 94       	dec	r0
 86e:	16 16       	cp	r1, r22
 870:	17 06       	cpc	r1, r23
 872:	18 06       	cpc	r1, r24
 874:	09 06       	cpc	r0, r25
 876:	08 95       	ret

00000878 <__fp_pscB>:
 878:	00 24       	eor	r0, r0
 87a:	0a 94       	dec	r0
 87c:	12 16       	cp	r1, r18
 87e:	13 06       	cpc	r1, r19
 880:	14 06       	cpc	r1, r20
 882:	05 06       	cpc	r0, r21
 884:	08 95       	ret

00000886 <__fp_round>:
 886:	09 2e       	mov	r0, r25
 888:	03 94       	inc	r0
 88a:	00 0c       	add	r0, r0
 88c:	11 f4       	brne	.+4      	; 0x892 <__fp_round+0xc>
 88e:	88 23       	and	r24, r24
 890:	52 f0       	brmi	.+20     	; 0x8a6 <__fp_round+0x20>
 892:	bb 0f       	add	r27, r27
 894:	40 f4       	brcc	.+16     	; 0x8a6 <__fp_round+0x20>
 896:	bf 2b       	or	r27, r31
 898:	11 f4       	brne	.+4      	; 0x89e <__fp_round+0x18>
 89a:	60 ff       	sbrs	r22, 0
 89c:	04 c0       	rjmp	.+8      	; 0x8a6 <__fp_round+0x20>
 89e:	6f 5f       	subi	r22, 0xFF	; 255
 8a0:	7f 4f       	sbci	r23, 0xFF	; 255
 8a2:	8f 4f       	sbci	r24, 0xFF	; 255
 8a4:	9f 4f       	sbci	r25, 0xFF	; 255
 8a6:	08 95       	ret

000008a8 <__fp_split3>:
 8a8:	57 fd       	sbrc	r21, 7
 8aa:	90 58       	subi	r25, 0x80	; 128
 8ac:	44 0f       	add	r20, r20
 8ae:	55 1f       	adc	r21, r21
 8b0:	59 f0       	breq	.+22     	; 0x8c8 <__fp_splitA+0x10>
 8b2:	5f 3f       	cpi	r21, 0xFF	; 255
 8b4:	71 f0       	breq	.+28     	; 0x8d2 <__fp_splitA+0x1a>
 8b6:	47 95       	ror	r20

000008b8 <__fp_splitA>:
 8b8:	88 0f       	add	r24, r24
 8ba:	97 fb       	bst	r25, 7
 8bc:	99 1f       	adc	r25, r25
 8be:	61 f0       	breq	.+24     	; 0x8d8 <__fp_splitA+0x20>
 8c0:	9f 3f       	cpi	r25, 0xFF	; 255
 8c2:	79 f0       	breq	.+30     	; 0x8e2 <__fp_splitA+0x2a>
 8c4:	87 95       	ror	r24
 8c6:	08 95       	ret
 8c8:	12 16       	cp	r1, r18
 8ca:	13 06       	cpc	r1, r19
 8cc:	14 06       	cpc	r1, r20
 8ce:	55 1f       	adc	r21, r21
 8d0:	f2 cf       	rjmp	.-28     	; 0x8b6 <__fp_split3+0xe>
 8d2:	46 95       	lsr	r20
 8d4:	f1 df       	rcall	.-30     	; 0x8b8 <__fp_splitA>
 8d6:	08 c0       	rjmp	.+16     	; 0x8e8 <__fp_splitA+0x30>
 8d8:	16 16       	cp	r1, r22
 8da:	17 06       	cpc	r1, r23
 8dc:	18 06       	cpc	r1, r24
 8de:	99 1f       	adc	r25, r25
 8e0:	f1 cf       	rjmp	.-30     	; 0x8c4 <__fp_splitA+0xc>
 8e2:	86 95       	lsr	r24
 8e4:	71 05       	cpc	r23, r1
 8e6:	61 05       	cpc	r22, r1
 8e8:	08 94       	sec
 8ea:	08 95       	ret

000008ec <__fp_zero>:
 8ec:	e8 94       	clt

000008ee <__fp_szero>:
 8ee:	bb 27       	eor	r27, r27
 8f0:	66 27       	eor	r22, r22
 8f2:	77 27       	eor	r23, r23
 8f4:	cb 01       	movw	r24, r22
 8f6:	97 f9       	bld	r25, 7
 8f8:	08 95       	ret

000008fa <__mulsf3>:
 8fa:	0e 94 90 04 	call	0x920	; 0x920 <__mulsf3x>
 8fe:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>
 902:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
 906:	38 f0       	brcs	.+14     	; 0x916 <__stack+0x17>
 908:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
 90c:	20 f0       	brcs	.+8      	; 0x916 <__stack+0x17>
 90e:	95 23       	and	r25, r21
 910:	11 f0       	breq	.+4      	; 0x916 <__stack+0x17>
 912:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>
 916:	0c 94 32 04 	jmp	0x864	; 0x864 <__fp_nan>
 91a:	11 24       	eor	r1, r1
 91c:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>

00000920 <__mulsf3x>:
 920:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
 924:	70 f3       	brcs	.-36     	; 0x902 <__stack+0x3>

00000926 <__mulsf3_pse>:
 926:	95 9f       	mul	r25, r21
 928:	c1 f3       	breq	.-16     	; 0x91a <__stack+0x1b>
 92a:	95 0f       	add	r25, r21
 92c:	50 e0       	ldi	r21, 0x00	; 0
 92e:	55 1f       	adc	r21, r21
 930:	62 9f       	mul	r22, r18
 932:	f0 01       	movw	r30, r0
 934:	72 9f       	mul	r23, r18
 936:	bb 27       	eor	r27, r27
 938:	f0 0d       	add	r31, r0
 93a:	b1 1d       	adc	r27, r1
 93c:	63 9f       	mul	r22, r19
 93e:	aa 27       	eor	r26, r26
 940:	f0 0d       	add	r31, r0
 942:	b1 1d       	adc	r27, r1
 944:	aa 1f       	adc	r26, r26
 946:	64 9f       	mul	r22, r20
 948:	66 27       	eor	r22, r22
 94a:	b0 0d       	add	r27, r0
 94c:	a1 1d       	adc	r26, r1
 94e:	66 1f       	adc	r22, r22
 950:	82 9f       	mul	r24, r18
 952:	22 27       	eor	r18, r18
 954:	b0 0d       	add	r27, r0
 956:	a1 1d       	adc	r26, r1
 958:	62 1f       	adc	r22, r18
 95a:	73 9f       	mul	r23, r19
 95c:	b0 0d       	add	r27, r0
 95e:	a1 1d       	adc	r26, r1
 960:	62 1f       	adc	r22, r18
 962:	83 9f       	mul	r24, r19
 964:	a0 0d       	add	r26, r0
 966:	61 1d       	adc	r22, r1
 968:	22 1f       	adc	r18, r18
 96a:	74 9f       	mul	r23, r20
 96c:	33 27       	eor	r19, r19
 96e:	a0 0d       	add	r26, r0
 970:	61 1d       	adc	r22, r1
 972:	23 1f       	adc	r18, r19
 974:	84 9f       	mul	r24, r20
 976:	60 0d       	add	r22, r0
 978:	21 1d       	adc	r18, r1
 97a:	82 2f       	mov	r24, r18
 97c:	76 2f       	mov	r23, r22
 97e:	6a 2f       	mov	r22, r26
 980:	11 24       	eor	r1, r1
 982:	9f 57       	subi	r25, 0x7F	; 127
 984:	50 40       	sbci	r21, 0x00	; 0
 986:	9a f0       	brmi	.+38     	; 0x9ae <__mulsf3_pse+0x88>
 988:	f1 f0       	breq	.+60     	; 0x9c6 <__mulsf3_pse+0xa0>
 98a:	88 23       	and	r24, r24
 98c:	4a f0       	brmi	.+18     	; 0x9a0 <__mulsf3_pse+0x7a>
 98e:	ee 0f       	add	r30, r30
 990:	ff 1f       	adc	r31, r31
 992:	bb 1f       	adc	r27, r27
 994:	66 1f       	adc	r22, r22
 996:	77 1f       	adc	r23, r23
 998:	88 1f       	adc	r24, r24
 99a:	91 50       	subi	r25, 0x01	; 1
 99c:	50 40       	sbci	r21, 0x00	; 0
 99e:	a9 f7       	brne	.-22     	; 0x98a <__mulsf3_pse+0x64>
 9a0:	9e 3f       	cpi	r25, 0xFE	; 254
 9a2:	51 05       	cpc	r21, r1
 9a4:	80 f0       	brcs	.+32     	; 0x9c6 <__mulsf3_pse+0xa0>
 9a6:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>
 9aa:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
 9ae:	5f 3f       	cpi	r21, 0xFF	; 255
 9b0:	e4 f3       	brlt	.-8      	; 0x9aa <__mulsf3_pse+0x84>
 9b2:	98 3e       	cpi	r25, 0xE8	; 232
 9b4:	d4 f3       	brlt	.-12     	; 0x9aa <__mulsf3_pse+0x84>
 9b6:	86 95       	lsr	r24
 9b8:	77 95       	ror	r23
 9ba:	67 95       	ror	r22
 9bc:	b7 95       	ror	r27
 9be:	f7 95       	ror	r31
 9c0:	e7 95       	ror	r30
 9c2:	9f 5f       	subi	r25, 0xFF	; 255
 9c4:	c1 f7       	brne	.-16     	; 0x9b6 <__mulsf3_pse+0x90>
 9c6:	fe 2b       	or	r31, r30
 9c8:	88 0f       	add	r24, r24
 9ca:	91 1d       	adc	r25, r1
 9cc:	96 95       	lsr	r25
 9ce:	87 95       	ror	r24
 9d0:	97 f9       	bld	r25, 7
 9d2:	08 95       	ret

000009d4 <_exit>:
 9d4:	f8 94       	cli

000009d6 <__stop_program>:
 9d6:	ff cf       	rjmp	.-2      	; 0x9d6 <__stop_program>
